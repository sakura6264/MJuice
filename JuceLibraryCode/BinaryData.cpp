/* ==================================== JUCER_BINARY_RESOURCE ====================================

   This is an auto-generated file: Any edits you make may be overwritten!

*/

#include <cstring>

namespace BinaryData
{

//================== BIG.png ==================
static const unsigned char temp_binary_data_0[] =
{ 137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,64,0,0,0,64,8,3,0,0,0,157,183,129,236,0,0,2,28,80,76,84,69,0,0,0,0,255,255,0,128,255,0,170,255,0,191,255,0,153,255,0,170,255,0,182,255,0,170,255,0,162,255,0,170,234,0,164,237,0,170,238,0,175,239,0,165,
240,0,170,241,0,166,242,0,174,243,0,166,244,0,170,244,0,173,245,0,167,245,0,173,246,0,167,246,0,167,247,0,170,247,0,173,248,0,168,240,0,170,241,0,172,241,0,170,242,0,172,242,0,168,243,6,166,243,6,168,243,5,168,244,5,167,245,5,168,245,5,170,245,5,167,
245,5,170,246,5,168,246,4,167,242,4,169,242,4,170,242,4,167,242,4,170,243,4,167,243,4,169,243,4,170,243,4,169,244,4,168,244,4,169,244,3,169,245,3,170,245,3,168,245,3,169,245,3,170,245,3,169,245,3,170,246,3,168,243,3,169,243,3,170,243,3,168,243,3,168,
243,3,168,244,3,170,244,3,168,244,3,170,244,3,169,245,3,170,245,2,168,245,2,169,245,2,170,243,2,169,243,2,170,243,2,168,243,2,169,243,2,170,244,2,168,244,2,169,244,2,169,244,2,170,244,2,169,244,2,169,244,2,170,244,2,170,245,2,169,245,2,169,245,2,170,
245,4,169,243,4,169,243,4,169,243,4,169,244,4,169,244,4,169,244,4,168,244,4,169,244,4,168,244,4,169,244,4,169,244,3,169,245,3,168,245,3,169,245,3,168,245,3,169,243,3,169,243,3,169,243,3,168,244,3,169,244,3,169,244,3,168,244,3,169,244,3,168,244,3,169,
244,3,169,244,3,170,245,3,170,245,3,169,243,3,170,244,3,169,244,3,169,244,3,170,244,3,169,244,3,170,244,3,169,244,3,169,244,3,170,244,3,169,245,3,169,245,3,170,243,3,169,243,3,169,243,3,169,244,3,170,244,2,169,244,2,170,244,2,169,244,2,169,244,2,170,
244,2,169,244,2,168,244,4,169,244,4,169,244,4,169,244,4,168,244,3,169,245,3,168,243,3,169,244,3,168,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,
244,3,169,244,3,169,245,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,255,255,255,180,30,94,102,0,0,0,178,116,82,78,83,0,1,2,3,4,5,6,7,9,11,12,14,15,16,17,18,20,22,23,24,25,26,
28,29,32,33,34,35,36,37,39,40,41,43,44,47,49,50,51,52,54,56,58,59,60,61,63,64,65,66,68,70,71,74,75,76,77,78,80,81,82,83,84,85,88,91,93,94,96,101,102,103,104,105,107,108,109,110,111,112,115,116,117,118,119,120,123,124,125,126,128,130,131,134,136,137,138,
140,141,142,145,146,147,148,150,151,152,154,156,158,160,162,163,165,166,167,170,173,175,179,180,181,182,183,185,187,189,194,195,196,197,198,199,201,203,205,206,207,208,209,210,212,213,214,217,218,220,221,222,224,225,226,227,228,229,231,232,233,234,235,
237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,127,198,239,224,0,0,0,1,98,75,71,68,179,218,109,255,126,0,0,3,0,73,68,65,84,88,195,237,151,87,91,19,65,20,134,39,32,162,216,197,6,138,130,21,21,123,193,94,104,98,87,192,174,40,118,
69,34,42,22,108,128,5,69,49,22,192,134,34,8,10,146,108,118,230,253,133,94,236,154,100,55,33,144,189,146,231,225,187,59,153,243,189,217,157,61,51,115,70,136,33,13,62,37,76,74,25,238,208,58,108,214,150,99,85,30,13,252,207,243,19,98,179,198,167,109,60,124,
235,181,143,160,94,204,28,160,53,46,117,221,161,202,151,189,1,163,146,186,14,64,107,90,255,230,153,123,221,245,221,193,63,213,165,46,165,12,132,175,134,245,103,127,104,177,234,18,155,10,162,251,215,246,0,72,155,181,189,230,202,174,229,11,207,41,128,186,
168,254,249,94,248,211,230,15,90,59,159,148,239,91,57,201,28,61,11,32,19,163,205,93,35,180,27,179,197,175,231,215,14,172,154,106,25,94,0,10,82,163,0,178,161,3,120,235,46,94,51,205,21,62,156,14,10,102,71,1,148,67,47,114,91,196,177,169,171,14,84,245,11,
120,66,151,206,109,251,175,147,87,238,47,127,218,105,22,68,116,128,7,29,142,7,227,137,43,246,92,173,237,8,253,136,253,0,222,162,224,152,16,66,140,205,42,56,255,168,149,48,13,4,112,189,240,226,227,239,244,161,129,0,250,212,239,55,142,1,221,245,238,226,
53,211,92,233,14,0,127,94,84,150,172,75,141,27,104,29,132,2,52,79,213,241,173,25,241,177,21,146,1,208,154,238,150,230,90,173,49,1,202,250,92,241,233,49,212,193,16,224,255,3,140,220,124,178,226,242,209,197,179,29,2,198,158,238,49,138,179,205,25,96,78,
139,147,13,37,168,140,46,195,169,75,169,156,0,70,124,32,116,137,246,5,72,222,112,176,36,39,35,18,224,144,249,250,247,107,189,160,218,35,3,50,239,27,135,201,187,159,97,0,215,87,0,89,148,32,68,114,53,60,172,139,0,136,59,35,45,143,104,1,100,2,112,66,8,33,
68,98,3,170,60,28,224,186,97,204,81,100,64,30,128,54,218,8,114,224,67,56,160,196,190,235,90,0,197,160,104,50,131,185,224,133,12,171,127,138,89,36,223,90,36,208,105,7,236,4,197,79,115,79,92,13,192,4,43,224,20,0,13,153,66,36,87,192,103,183,13,176,22,20,
100,27,129,27,20,221,113,86,192,59,20,52,143,17,66,8,81,1,101,54,64,82,47,10,190,164,9,33,68,158,66,193,29,171,127,148,66,66,161,121,138,74,60,246,58,184,9,10,186,47,108,207,191,103,188,235,38,43,96,6,248,97,158,25,181,208,3,71,173,9,62,84,232,97,241,
204,214,55,164,130,6,75,204,168,13,9,123,173,25,133,150,175,212,97,111,243,18,124,248,161,204,8,22,131,132,141,182,148,35,33,15,240,35,43,172,140,107,64,199,187,84,8,33,198,53,130,68,142,183,167,172,111,254,231,127,144,18,190,14,118,128,31,188,231,150,
101,238,254,4,58,84,135,231,36,230,222,254,232,251,237,185,148,21,105,29,38,54,65,160,27,150,18,185,40,214,102,124,169,6,62,163,51,212,85,96,58,98,81,142,6,82,243,105,186,4,110,196,59,184,16,44,111,10,116,3,69,46,71,87,138,17,5,117,62,224,125,233,100,
231,55,154,225,41,211,147,134,238,117,131,79,127,1,0,214,201,38,185,68,124,196,0,0,0,0,73,69,78,68,174,66,96,130,0,0 };

const char* BIG_png = (const char*) temp_binary_data_0;

//================== SMALL.png ==================
static const unsigned char temp_binary_data_1[] =
{ 137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,0,0,0,32,0,0,0,32,8,3,0,0,0,68,164,138,198,0,0,2,31,80,76,84,69,0,0,0,0,255,255,0,128,255,0,170,255,0,191,255,0,153,255,0,170,255,0,182,255,0,170,255,0,162,255,0,170,234,0,164,237,0,170,238,0,175,239,0,165,
240,0,170,241,0,166,242,0,174,243,0,166,244,0,170,244,0,173,245,0,167,245,0,173,246,0,167,246,0,167,247,0,170,247,0,173,248,0,168,240,0,170,241,0,172,241,0,170,242,0,172,242,0,168,243,6,166,243,6,168,243,5,168,244,5,167,245,5,168,245,5,170,245,5,167,
245,5,170,246,5,168,246,4,167,242,4,169,242,4,170,242,4,167,242,4,170,243,4,167,243,4,169,243,4,170,243,4,169,244,4,168,244,4,169,244,3,169,245,3,170,245,3,168,245,3,169,245,3,170,245,3,169,245,3,170,246,3,168,243,3,169,243,3,170,243,3,168,243,3,168,
243,3,168,244,3,170,244,3,168,244,3,170,244,3,169,245,3,170,245,2,168,245,2,169,245,2,170,243,2,169,243,2,170,243,2,168,243,2,169,243,2,170,244,2,168,244,2,169,244,2,169,244,2,170,244,2,169,244,2,169,244,2,170,244,2,170,245,2,169,245,2,169,245,2,170,
245,4,169,243,4,169,243,4,169,243,4,169,244,4,169,244,4,169,244,4,168,244,4,169,244,4,168,244,4,169,244,4,169,244,3,169,245,3,168,245,3,169,245,3,168,245,3,169,243,3,169,243,3,169,243,3,168,244,3,169,244,3,169,244,3,168,244,3,169,244,3,168,244,3,169,
244,3,169,244,3,170,245,3,170,245,3,169,243,3,170,244,3,169,244,3,169,244,3,170,244,3,169,244,3,170,244,3,169,244,3,169,244,3,170,244,3,169,245,3,169,245,3,170,243,3,169,243,3,169,243,3,169,244,3,170,244,2,169,244,2,170,244,2,169,244,2,169,244,2,170,
244,2,169,244,2,168,244,4,169,244,4,169,244,4,169,244,4,168,244,3,169,245,3,168,243,3,169,244,3,168,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,
244,3,169,244,3,169,245,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,3,169,244,255,255,255,0,0,0,109,44,35,141,0,0,0,181,116,82,78,83,0,1,2,3,4,5,6,7,9,11,12,14,15,16,17,18,20,22,23,24,
25,26,28,29,32,33,34,35,36,37,39,40,41,43,44,47,49,50,51,52,54,56,58,59,60,61,63,64,65,66,68,70,71,74,75,76,77,78,80,81,82,83,84,85,88,91,93,94,96,101,102,103,104,105,107,108,109,110,111,112,115,116,117,118,119,120,123,124,125,126,128,130,131,134,136,
137,138,140,141,142,145,146,147,148,150,151,152,154,156,158,160,162,163,165,166,167,170,173,175,179,180,181,182,183,185,187,189,194,195,196,197,198,199,201,203,205,206,207,208,209,210,212,213,214,217,218,220,221,222,224,225,226,227,228,229,231,232,233,
234,235,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,255,0,208,254,72,244,0,0,0,9,112,72,89,115,0,0,18,116,0,0,18,116,1,222,102,31,120,0,0,1,29,73,68,65,84,56,141,99,96,24,24,192,98,87,178,118,83,43,43,54,41,38,139,130,
85,155,128,96,227,122,32,33,139,46,43,7,146,218,180,97,195,134,77,80,128,38,175,182,105,229,58,176,120,147,159,8,144,155,180,105,19,59,170,130,77,11,55,245,7,75,192,185,10,155,54,41,161,41,88,95,10,99,26,101,47,6,25,133,174,96,83,36,3,131,78,202,236,
77,112,128,161,0,5,244,226,86,208,30,34,133,221,13,155,54,77,142,83,196,231,72,144,27,24,232,166,192,54,55,66,9,143,2,101,92,225,0,85,192,177,105,35,186,2,13,96,236,78,128,43,152,181,105,83,16,131,240,166,26,132,130,194,77,155,64,241,15,83,176,105,211,
90,32,233,132,48,65,12,40,55,103,195,166,197,112,5,27,23,1,73,147,77,155,4,161,10,38,108,220,196,203,192,144,11,55,97,213,70,80,98,218,184,17,158,96,54,173,219,4,49,57,2,194,151,129,58,178,5,166,96,13,88,129,246,166,77,214,80,129,112,176,252,124,184,
31,220,55,109,90,173,239,13,116,39,92,132,189,116,77,159,14,82,8,172,5,90,2,148,79,100,192,9,38,131,140,12,194,45,15,4,146,92,120,165,105,10,0,158,100,175,72,0,216,142,55,0,0,0,0,73,69,78,68,174,66,96,130,0,0 };

const char* SMALL_png = (const char*) temp_binary_data_1;


const char* getNamedResource (const char* resourceNameUTF8, int& numBytes);
const char* getNamedResource (const char* resourceNameUTF8, int& numBytes)
{
    unsigned int hash = 0;

    if (resourceNameUTF8 != nullptr)
        while (*resourceNameUTF8 != 0)
            hash = 31 * hash + (unsigned int) *resourceNameUTF8++;

    switch (hash)
    {
        case 0x2402724a:  numBytes = 1580; return BIG_png;
        case 0x456bb2d1:  numBytes = 1111; return SMALL_png;
        default: break;
    }

    numBytes = 0;
    return nullptr;
}

const char* namedResourceList[] =
{
    "BIG_png",
    "SMALL_png"
};

const char* originalFilenames[] =
{
    "BIG.png",
    "SMALL.png"
};

const char* getNamedResourceOriginalFilename (const char* resourceNameUTF8);
const char* getNamedResourceOriginalFilename (const char* resourceNameUTF8)
{
    for (unsigned int i = 0; i < (sizeof (namedResourceList) / sizeof (namedResourceList[0])); ++i)
        if (strcmp (namedResourceList[i], resourceNameUTF8) == 0)
            return originalFilenames[i];

    return nullptr;
}

}
